{"ast":null,"code":"import _classCallCheck from \"/home/via/\\xC1rea de Trabalho/myreads-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/via/\\xC1rea de Trabalho/myreads-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/via/\\xC1rea de Trabalho/myreads-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/via/\\xC1rea de Trabalho/myreads-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/via/\\xC1rea de Trabalho/myreads-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/via/\\xC1rea de Trabalho/myreads-master/src/components/books/books.js\";\nimport React, { Component } from 'react';\nvar IMAGE_NOT_AVAILABLE = 'http://books.google.com/books/content?id=NLK2AAAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api';\n\nvar books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(books, _Component);\n\n  function books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (e, book) {\n      _this.props.moveBooks(book, e.target.value);\n    };\n\n    _this.getShelfOfBookOnShelf = function (book) {\n      return _this.props.booksOnShelfs.filter(function (value) {\n        return value.id === book;\n      });\n    };\n\n    _this.renderBooks = function (book) {\n      // Trata os casos de livros que nao tem valor de imagens e seta uma imagem default\n      var imagem = book.imageLinks && book.imageLinks.thumbnail ? book.imageLinks.thumbnail : IMAGE_NOT_AVAILABLE;\n      /*\n        serve para verificar se o component book esta sendo renderizado\n        no componente de BookShelf ou SearchBook, pois ambos fazem tratamento de shelfs.\n        Para isso, seta none, caso o book nao esteja na prateleira.\n      */\n\n      if (typeof _this.props.booksOnShelfs !== 'undefined') {\n        var bookShelf = _this.getShelfOfBookOnShelf(book.id);\n\n        if (bookShelf.length !== 0) {\n          book.shelf = bookShelf[0].shelf;\n        } else {\n          book.shelf = 'none';\n        }\n      }\n\n      return React.createElement(\"li\", {\n        key: book.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"book-cover\",\n        style: {\n          width: 128,\n          height: 193,\n          backgroundImage: \"url(\".concat(imagem, \")\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"book-shelf-changer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        key: book.id,\n        value: book.shelf,\n        onChange: function onChange(e) {\n          return _this.handleChange(e, book);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"move\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"currentlyReading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"option\", {\n        value: \"wantToRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"option\", {\n        value: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"None\")))), React.createElement(\"div\", {\n        className: \"book-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, book.title), React.createElement(\"div\", {\n        className: \"book-authors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, book.authors)));\n    };\n\n    return _this;\n  }\n\n  _createClass(books, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.props.books.map(function (book) {\n        return _this2.renderBooks(book);\n      });\n    }\n  }]);\n\n  return books;\n}(Component);\n\nexport { books as default };","map":{"version":3,"sources":["/home/via/Área de Trabalho/myreads-master/src/components/books/books.js"],"names":["React","Component","IMAGE_NOT_AVAILABLE","books","handleChange","e","book","props","moveBooks","target","value","getShelfOfBookOnShelf","booksOnShelfs","filter","id","renderBooks","imagem","imageLinks","thumbnail","bookShelf","length","shelf","width","height","backgroundImage","title","authors","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nconst IMAGE_NOT_AVAILABLE = 'http://books.google.com/books/content?id=NLK2AAAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api'\n\nexport default class books extends Component {\n    \n  // Funcao responsavel por detectar a mudanca de shelf e chamar a funcao que foi passada via props\n  handleChange = (e, book) => {\n    this.props.moveBooks(book, e.target.value)\n  }\n\n  // Verifica se o book retornado da api esta atualmente na prateleira\n  getShelfOfBookOnShelf = (book) => {\n    return this.props.booksOnShelfs.filter((value) => value.id === book)\n  }\n\n  /**\n    ** Author: Robson Junior\n    ** Summary: Funcao responsavel por realizar o render dos books, recebidos via parametro\n    * @param {Object} book\n  */\n  renderBooks = (book) => {\n    // Trata os casos de livros que nao tem valor de imagens e seta uma imagem default\n    const imagem = book.imageLinks && book.imageLinks.thumbnail\n    ? book.imageLinks.thumbnail\n    : IMAGE_NOT_AVAILABLE;\n\n    /*\n      serve para verificar se o component book esta sendo renderizado\n      no componente de BookShelf ou SearchBook, pois ambos fazem tratamento de shelfs.\n      Para isso, seta none, caso o book nao esteja na prateleira.\n    */\n    if (typeof this.props.booksOnShelfs !== 'undefined'){\n        const bookShelf = this.getShelfOfBookOnShelf(book.id)\n  \n        if(bookShelf.length !== 0){\n          book.shelf = bookShelf[0].shelf\n        }else {\n          book.shelf = 'none'\n        }\n    }\n    return(\n      <li key={book.id}>\n      <div className=\"book\">\n        <div className=\"book-top\">\n            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${imagem})`}}></div>\n          <div className=\"book-shelf-changer\">\n            <select key={book.id} value={book.shelf} onChange={(e) => this.handleChange(e, book)}>\n              <option value=\"move\" disabled>Move to...</option>\n              <option value=\"currentlyReading\" >Currently Reading</option>\n              <option value=\"wantToRead\">Want to Read</option>\n              <option value=\"read\" >Read</option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{book.title}</div>\n        <div className=\"book-authors\">{book.authors}</div>\n      </div>\n    </li>\n    )\n  }\n\n  render() {\n    return (\n      this.props.books.map(book => (\n        this.renderBooks(book)\n    ))\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}